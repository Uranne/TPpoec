@model IEnumerable<eCommerce.Entity.Produit>

@{
    ViewBag.Title = "NosProduits";
}
<style>
    .hovering:hover {
        opacity: 1;
    }
    .hovering{
        opacity:0;
        transition: opacity 0.4s;
    }
</style>
<h2>NosProduits</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<div>
    @for (int i = 0; i < Model.Count(); i += 4)
    {
        <div class="row">
            @for (int j = i; j < i + 4; j++)
            {
                if (j <= Model.Count())
                {
            <div class="col-sm-4">
                @if (Model.ElementAt(j).Photos.Count() > 0)
                {
                    string base64 = Convert.ToBase64String(Model.ElementAt(j).Photos.First().Image);
                    string imgSrc = Model.ElementAt(j).Photos.First().ImageType + base64;
                    <img src="@imgSrc" alt="une image pas visible" class="img-thumbnail" style="width:100%; margin-bottom:2em; z-index:1" />
                    <a href=@string.Format("/Produit/Fiche/{0}", Model.ElementAt(j).Id) >
                        <div class="hovering" style="position:absolute; vertical-align:middle; left:16px; top:0em;  width:100%; height:100%; z-index:2">
                            @Html.Label(Model.ElementAt(j).Nom, new { @class = "img-thumbnail " })
                            @Html.Label(Model.ElementAt(j).Prix.ToString() + "€", new { @class = "img-thumbnail", @style = "position:absolute; bottom:0em; right:3px ;margin-bottom:2em; margin-right:2em;" })
                        </div>
                    </a>
                }
                else
                {
                    <p>Pas d'image pour ce produit</p>
                }
            </div>
                }
            }

        </div>
    }

</div>
